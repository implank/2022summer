definitions:
  database.Document:
    properties:
      count:
        type: integer
      document_id:
        type: integer
      document_name:
        type: string
      document_url:
        type: string
      proj_id:
        type: integer
      status:
        description: 1 正常、2 回收站
        type: integer
    type: object
  database.Group:
    properties:
      groupID:
        type: integer
      groupInfo:
        type: string
      groupName:
        type: string
      userID:
        description: 团队创建者
        type: integer
    type: object
  database.GroupMember:
    properties:
      email:
        type: string
      realName:
        type: string
      status:
        type: string
      userID:
        type: integer
      username:
        type: string
    type: object
  database.PPage:
    properties:
      ppage_data:
        type: string
      ppage_id:
        type: integer
      ppage_name:
        type: string
      ppage_url:
        description: 先写上
        type: string
      prototype_id:
        type: integer
    type: object
  database.PPageID:
    properties:
      ppage_id:
        type: integer
      ppage_name:
        type: string
    type: object
  database.Proj:
    properties:
      group_id:
        description: 项目所属团队
        type: integer
      proj_id:
        type: integer
      proj_info:
        type: string
      proj_name:
        type: string
      status:
        description: 1 正常、2 回收站
        type: integer
      user_id:
        description: 项目创建者
        type: integer
    type: object
  database.Prototype:
    properties:
      proj_id:
        type: integer
      prototype_id:
        type: integer
      prototype_name:
        type: string
      prototype_url:
        description: 先留着
        type: string
      status:
        description: 1 正常、2 回收站
        type: integer
    type: object
  database.Uml:
    properties:
      proj_id:
        type: integer
      status:
        description: 1 正常、2 回收站
        type: integer
      uml_id:
        type: integer
      uml_name:
        type: string
      uml_url:
        type: string
    type: object
  database.User:
    properties:
      age:
        type: integer
      email:
        type: string
      password:
        type: string
      realName:
        type: string
      sex:
        type: string
      userID:
        type: integer
      userInfo:
        type: string
      username:
        type: string
    type: object
  response.AddMemberA:
    properties:
      code:
        type: integer
      message:
        type: string
      success:
        type: boolean
    type: object
  response.AddMemberQ:
    properties:
      group_id:
        type: integer
      username:
        type: string
    type: object
  response.CreateDocumentA:
    properties:
      message:
        type: string
      success:
        type: boolean
    type: object
  response.CreateDocumentQ:
    properties:
      document_name:
        type: string
      proj_id:
        type: integer
    required:
    - document_name
    type: object
  response.CreateGroupA:
    properties:
      code:
        type: integer
      group:
        $ref: '#/definitions/database.Group'
      message:
        type: string
      success:
        type: boolean
    type: object
  response.CreateGroupQ:
    properties:
      group_info:
        type: string
      group_name:
        type: string
    required:
    - group_name
    type: object
  response.CreatePPageA:
    properties:
      message:
        type: string
      success:
        type: boolean
    type: object
  response.CreatePPageQ:
    properties:
      ppage_data:
        type: string
      ppage_name:
        type: string
      prototype_id:
        type: integer
    required:
    - ppage_name
    - prototype_id
    type: object
  response.CreateProjA:
    properties:
      message:
        type: string
      success:
        type: boolean
    type: object
  response.CreateProjQ:
    properties:
      group_id:
        type: integer
      proj_info:
        type: string
      proj_name:
        type: string
    required:
    - group_id
    - proj_name
    type: object
  response.CreatePrototypeA:
    properties:
      message:
        type: string
      success:
        type: boolean
    type: object
  response.CreatePrototypeQ:
    properties:
      proj_id:
        type: integer
      prototype_name:
        type: string
    required:
    - prototype_name
    type: object
  response.CreateUmlA:
    properties:
      message:
        type: string
      success:
        type: boolean
    type: object
  response.CreateUmlQ:
    properties:
      proj_id:
        type: integer
      uml_name:
        type: string
    required:
    - uml_name
    type: object
  response.DeletePPageA:
    properties:
      message:
        type: string
      success:
        type: boolean
    type: object
  response.DeletePPageQ:
    properties:
      ppage_id:
        type: integer
    required:
    - ppage_id
    type: object
  response.DeleteProjA:
    properties:
      message:
        type: string
      success:
        type: boolean
    type: object
  response.DeleteProjQ:
    properties:
      proj_id:
        type: integer
    required:
    - proj_id
    type: object
  response.EnterDocumentA:
    properties:
      code:
        type: integer
      document:
        $ref: '#/definitions/database.Document'
      message:
        type: string
      rank:
        type: integer
      success:
        type: boolean
    type: object
  response.EnterDocumentQ:
    properties:
      document_id:
        type: integer
    required:
    - document_id
    type: object
  response.GetFilesByNameA:
    properties:
      count_documents:
        type: integer
      count_prototypes:
        type: integer
      count_umls:
        type: integer
      documents:
        items:
          $ref: '#/definitions/database.Document'
        type: array
      message:
        type: string
      prototypes:
        items:
          $ref: '#/definitions/database.Prototype'
        type: array
      success:
        type: boolean
      umls:
        items:
          $ref: '#/definitions/database.Uml'
        type: array
    type: object
  response.GetFilesByNameQ:
    properties:
      name:
        type: string
    type: object
  response.GetGroupsA:
    properties:
      code:
        type: integer
      count:
        type: integer
      groups:
        items:
          $ref: '#/definitions/database.Group'
        type: array
      message:
        type: string
      success:
        type: boolean
    type: object
  response.GetIdentityA:
    properties:
      code:
        type: integer
      message:
        type: string
      status:
        type: integer
      success:
        type: boolean
    type: object
  response.GetIdentityQ:
    properties:
      group_id:
        type: integer
    type: object
  response.GetMembersA:
    properties:
      code:
        type: integer
      members:
        items:
          $ref: '#/definitions/database.GroupMember'
        type: array
      message:
        type: string
      success:
        type: boolean
    type: object
  response.GetMembersQ:
    properties:
      group_id:
        type: integer
    type: object
  response.GetPPageByIDA:
    properties:
      message:
        type: string
      ppage:
        $ref: '#/definitions/database.PPage'
      success:
        type: boolean
    type: object
  response.GetPPageByIDQ:
    properties:
      ppage_id:
        type: integer
    required:
    - ppage_id
    type: object
  response.GetPPagesA:
    properties:
      count:
        type: integer
      message:
        type: string
      ppages:
        items:
          $ref: '#/definitions/database.PPageID'
        type: array
      success:
        type: boolean
    type: object
  response.GetPPagesQ:
    properties:
      prototype_id:
        type: integer
    required:
    - prototype_id
    type: object
  response.GetProjAllA:
    properties:
      count:
        type: integer
      message:
        type: string
      projs:
        items:
          $ref: '#/definitions/database.Proj'
        type: array
      success:
        type: boolean
    type: object
  response.GetProjAllQ:
    type: object
  response.GetProjByIDA:
    properties:
      message:
        type: string
      proj:
        $ref: '#/definitions/database.Proj'
      success:
        type: boolean
    type: object
  response.GetProjByIDQ:
    properties:
      proj_id:
        type: integer
    required:
    - proj_id
    type: object
  response.GetProjByNameA:
    properties:
      count:
        type: integer
      message:
        type: string
      projs:
        items:
          $ref: '#/definitions/database.Proj'
        type: array
      success:
        type: boolean
    type: object
  response.GetProjByNameQ:
    properties:
      proj_name:
        type: string
    type: object
  response.GetProjCreateA:
    properties:
      count:
        type: integer
      message:
        type: string
      projs:
        items:
          $ref: '#/definitions/database.Proj'
        type: array
      success:
        type: boolean
    type: object
  response.GetProjCreateQ:
    type: object
  response.GetProjDocumentsA:
    properties:
      count:
        type: integer
      documents:
        items:
          $ref: '#/definitions/database.Document'
        type: array
      message:
        type: string
      success:
        type: boolean
    type: object
  response.GetProjDocumentsQ:
    properties:
      proj_id:
        type: integer
    required:
    - proj_id
    type: object
  response.GetProjJoinA:
    properties:
      count:
        type: integer
      message:
        type: string
      projs:
        items:
          $ref: '#/definitions/database.Proj'
        type: array
      success:
        type: boolean
    type: object
  response.GetProjJoinQ:
    type: object
  response.GetProjPrototypesA:
    properties:
      count:
        type: integer
      message:
        type: string
      prototypes:
        items:
          $ref: '#/definitions/database.Prototype'
        type: array
      success:
        type: boolean
    type: object
  response.GetProjPrototypesQ:
    properties:
      proj_id:
        type: integer
    required:
    - proj_id
    type: object
  response.GetProjUmlsA:
    properties:
      count:
        type: integer
      message:
        type: string
      success:
        type: boolean
      umls:
        items:
          $ref: '#/definitions/database.Uml'
        type: array
    type: object
  response.GetProjUmlsQ:
    properties:
      proj_id:
        type: integer
    required:
    - proj_id
    type: object
  response.GetUserInfoA:
    properties:
      code:
        type: integer
      message:
        type: string
      poster:
        $ref: '#/definitions/database.User'
      success:
        type: boolean
      user:
        $ref: '#/definitions/database.User'
    type: object
  response.GetUserInfoQ:
    properties:
      user_id:
        type: integer
    type: object
  response.LoginA:
    properties:
      code:
        type: integer
      message:
        type: string
      success:
        type: boolean
      token:
        type: string
      user:
        $ref: '#/definitions/database.User'
    type: object
  response.LoginQ:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  response.ModifyGroupA:
    properties:
      code:
        type: integer
      group:
        $ref: '#/definitions/database.Group'
      message:
        type: string
      success:
        type: boolean
    type: object
  response.ModifyGroupQ:
    properties:
      group_id:
        type: integer
      group_info:
        type: string
      group_name:
        type: string
    required:
    - group_id
    type: object
  response.ModifyInfoA:
    properties:
      code:
        type: integer
      message:
        type: string
      success:
        type: boolean
    type: object
  response.ModifyInfoQ:
    properties:
      age:
        type: integer
      email:
        type: string
      sex:
        type: string
      username:
        type: string
    type: object
  response.ModifyPasswordA:
    properties:
      code:
        type: integer
      message:
        type: string
      success:
        type: boolean
    type: object
  response.ModifyPasswordQ:
    properties:
      password:
        type: string
    required:
    - password
    type: object
  response.MoveDocumentToBinA:
    properties:
      message:
        type: string
      success:
        type: boolean
    type: object
  response.MoveDocumentToBinQ:
    properties:
      document_id:
        type: integer
    required:
    - document_id
    type: object
  response.MoveProjBinA:
    properties:
      message:
        type: string
      success:
        type: boolean
    type: object
  response.MoveProjBinQ:
    properties:
      proj_id:
        type: integer
    required:
    - proj_id
    type: object
  response.MovePrototypeToBinA:
    properties:
      message:
        type: string
      success:
        type: boolean
    type: object
  response.MovePrototypeToBinQ:
    properties:
      prototype_id:
        type: integer
    required:
    - prototype_id
    type: object
  response.MoveUmlToBinA:
    properties:
      message:
        type: string
      success:
        type: boolean
    type: object
  response.MoveUmlToBinQ:
    properties:
      uml_id:
        type: integer
    required:
    - uml_id
    type: object
  response.QuitDocumentA:
    properties:
      code:
        type: integer
      document:
        $ref: '#/definitions/database.Document'
      message:
        type: string
      rank:
        type: integer
      success:
        type: boolean
    type: object
  response.QuitDocumentQ:
    properties:
      document_id:
        type: integer
    required:
    - document_id
    type: object
  response.RegisterA:
    properties:
      code:
        type: integer
      message:
        type: string
      success:
        type: boolean
    type: object
  response.RegisterQ:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  response.RemoveMemberA:
    properties:
      code:
        type: integer
      message:
        type: string
      success:
        type: boolean
    type: object
  response.RemoveMemberQ:
    properties:
      group_id:
        type: integer
      user_id:
        type: integer
    type: object
  response.SetMemberStatusA:
    properties:
      code:
        type: integer
      message:
        type: string
      success:
        type: boolean
    type: object
  response.SetMemberStatusQ:
    properties:
      group_id:
        type: integer
      status:
        enum:
        - 1
        - 2
        type: integer
      user_id:
        type: integer
    type: object
  response.UpdateDocumentA:
    properties:
      message:
        type: string
      success:
        type: boolean
    type: object
  response.UpdateDocumentQ:
    properties:
      document_id:
        type: integer
      document_name:
        type: string
    required:
    - document_id
    - document_name
    type: object
  response.UpdatePPageA:
    properties:
      message:
        type: string
      success:
        type: boolean
    type: object
  response.UpdatePPageQ:
    properties:
      ppage_data:
        type: string
      ppage_id:
        type: integer
      ppage_name:
        type: string
    required:
    - ppage_id
    type: object
  response.UpdateProjA:
    properties:
      message:
        type: string
      success:
        type: boolean
    type: object
  response.UpdateProjQ:
    properties:
      proj_id:
        type: integer
      proj_info:
        type: string
      proj_name:
        type: string
    required:
    - proj_id
    - proj_name
    type: object
  response.UpdatePrototypeA:
    properties:
      message:
        type: string
      success:
        type: boolean
    type: object
  response.UpdatePrototypeQ:
    properties:
      prototype_id:
        type: integer
      prototype_name:
        type: string
    required:
    - prototype_id
    - prototype_name
    type: object
  response.UpdateUmlA:
    properties:
      message:
        type: string
      success:
        type: boolean
    type: object
  response.UpdateUmlQ:
    properties:
      uml_id:
        type: integer
      uml_name:
        type: string
    required:
    - uml_id
    - uml_name
    type: object
  response.UploadDocumentA:
    properties:
      code:
        type: integer
      message:
        type: string
      success:
        type: boolean
    type: object
info:
  contact: {}
paths:
  /bin/delete_proj:
    post:
      consumes:
      - application/json
      parameters:
      - description: 项目ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.DeleteProjQ'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.DeleteProjA'
      summary: 删除项目
      tags:
      - 回收站
  /file/create_document:
    post:
      consumes:
      - application/json
      parameters:
      - description: 文档名称，文档所属项目ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.CreateDocumentQ'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.CreateDocumentA'
      summary: 创建文档
      tags:
      - 项目管理的第二页
  /file/create_prototype:
    post:
      consumes:
      - application/json
      parameters:
      - description: 设计原型名称，设计原型所属项目ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.CreatePrototypeQ'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.CreatePrototypeA'
      summary: 创建设计原型
      tags:
      - 项目管理的第二页
  /file/create_uml:
    post:
      consumes:
      - application/json
      parameters:
      - description: Uml名称，Uml所属项目ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.CreateUmlQ'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.CreateUmlA'
      summary: 创建 Uml
      tags:
      - 项目管理的第二页
  /file/enter_document:
    post:
      consumes:
      - application/json
      parameters:
      - description: 项目ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.EnterDocumentQ'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.EnterDocumentA'
      summary: 进入文档
      tags:
      - 项目管理的第二页
  /file/get_files_by_name:
    post:
      consumes:
      - application/json
      parameters:
      - description: 文件名称（不一定是全名，子串搜索，为空时返回数据库中全部不在回收站的文件，包括设计原型、Uml、文档）
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.GetFilesByNameQ'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GetFilesByNameA'
      summary: 搜索框
      tags:
      - 项目管理的第二页
  /file/get_proj_by_id:
    post:
      consumes:
      - application/json
      parameters:
      - description: 项目ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.GetProjByIDQ'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GetProjByIDA'
      summary: 获取项目信息
      tags:
      - 项目管理的第二页
  /file/get_proj_documents:
    post:
      consumes:
      - application/json
      parameters:
      - description: 项目ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.GetProjDocumentsQ'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GetProjDocumentsA'
      summary: 获取项目的文档
      tags:
      - 项目管理的第二页
  /file/get_proj_prototypes:
    post:
      consumes:
      - application/json
      parameters:
      - description: 项目ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.GetProjPrototypesQ'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GetProjPrototypesA'
      summary: 获取项目的设计原型
      tags:
      - 项目管理的第二页
  /file/get_proj_umls:
    post:
      consumes:
      - application/json
      parameters:
      - description: 项目ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.GetProjUmlsQ'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GetProjUmlsA'
      summary: 获取项目的 Uml 图
      tags:
      - 项目管理的第二页
  /file/move_document_to_bin:
    post:
      consumes:
      - application/json
      parameters:
      - description: 文档 ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.MoveDocumentToBinQ'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.MoveDocumentToBinA'
      summary: 文档移入回收站
      tags:
      - 项目管理的第二页
  /file/move_prototype_to_bin:
    post:
      consumes:
      - application/json
      parameters:
      - description: 设计原型ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.MovePrototypeToBinQ'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.MovePrototypeToBinA'
      summary: 设计原型移入回收站
      tags:
      - 项目管理的第二页
  /file/move_uml_to_bin:
    post:
      consumes:
      - application/json
      parameters:
      - description: Uml ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.MoveUmlToBinQ'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.MoveUmlToBinA'
      summary: Uml 移入回收站
      tags:
      - 项目管理的第二页
  /file/quit_document:
    post:
      consumes:
      - application/json
      parameters:
      - description: 项目ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.QuitDocumentQ'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.QuitDocumentA'
      summary: 退出文档
      tags:
      - 项目管理的第二页
  /file/update_document:
    post:
      consumes:
      - application/json
      parameters:
      - description: 文档ID，文档的新名字（必填，可以填原名，不能和其他项目同名）
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.UpdateDocumentQ'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UpdateDocumentA'
      summary: 修改文档名称
      tags:
      - 项目管理的第二页
  /file/update_prototype:
    post:
      consumes:
      - application/json
      parameters:
      - description: 设计原型ID，设计原型的新名字（必填，可以填原名，不能和其他项目同名）
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.UpdatePrototypeQ'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UpdatePrototypeA'
      summary: 修改设计原型名称
      tags:
      - 项目管理的第二页
  /file/update_uml:
    post:
      consumes:
      - application/json
      parameters:
      - description: Uml ID，Uml的新名字（必填，可以填原名，不能和其他项目同名）
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.UpdateUmlQ'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UpdateUmlA'
      summary: 修改 Uml 名称
      tags:
      - 项目管理的第二页
  /file/upload_document:
    post:
      parameters:
      - description: 文档
        in: formData
        name: file
        required: true
        type: file
      - description: 文档ID
        in: formData
        name: document_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UploadDocumentA'
      summary: 上传文档
      tags:
      - 项目管理的第二页
  /group/add_member:
    post:
      consumes:
      - application/json
      parameters:
      - description: 用户id，团队id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.AddMemberQ'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.AddMemberA'
      tags:
      - Group
  /group/create_group:
    post:
      consumes:
      - application/json
      parameters:
      - description: 团队名称，团队介绍
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.CreateGroupQ'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.CreateGroupA'
      tags:
      - Group
  /group/get_group_members:
    post:
      consumes:
      - application/json
      parameters:
      - description: 团队id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.GetMembersQ'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GetMembersA'
      tags:
      - Group
  /group/get_groups:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GetGroupsA'
      tags:
      - Group
  /group/get_identity:
    post:
      consumes:
      - application/json
      parameters:
      - description: 团队id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.GetIdentityQ'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GetIdentityA'
      tags:
      - Group
  /group/modify_group:
    post:
      consumes:
      - application/json
      parameters:
      - description: 团队id，团队名称，团队介绍
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.ModifyGroupQ'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ModifyGroupA'
      tags:
      - Group
  /group/remove_member:
    post:
      consumes:
      - application/json
      parameters:
      - description: 用户id，团队id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.RemoveMemberQ'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.RemoveMemberA'
      tags:
      - Group
  /group/set_member_status:
    post:
      consumes:
      - application/json
      parameters:
      - description: 用户id，团队id，状态
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.SetMemberStatusQ'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SetMemberStatusA'
      tags:
      - Group
  /login:
    post:
      consumes:
      - application/json
      parameters:
      - description: 用户名，密码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.LoginQ'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.LoginA'
      tags:
      - 基本模块
  /ppage/create_ppage:
    post:
      consumes:
      - application/json
      parameters:
      - description: 页面名称，页面数据（可选），页面所属设计原型ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.CreatePPageQ'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.CreatePPageA'
      summary: 创建设计原型的一个页面
      tags:
      - 设计原型的页面
  /ppage/delete_ppage:
    post:
      consumes:
      - application/json
      parameters:
      - description: 页面ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.DeletePPageQ'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.DeletePPageA'
      summary: 删除设计原型的某个页面
      tags:
      - 设计原型的页面
  /ppage/get_ppage_by_id:
    post:
      consumes:
      - application/json
      parameters:
      - description: 页面ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.GetPPageByIDQ'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GetPPageByIDA'
      summary: 获取设计原型的某个页面
      tags:
      - 设计原型的页面
  /ppage/get_ppages:
    post:
      consumes:
      - application/json
      parameters:
      - description: 设计原型ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.GetPPagesQ'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GetPPagesA'
      summary: 获取某个设计原型的所有页面的ID
      tags:
      - 设计原型的页面
  /ppage/update_ppage:
    post:
      consumes:
      - application/json
      parameters:
      - description: 页面ID，页面名称（可选，如果没填或者为空字符串，则不修改），页面数据（可选，如果没填或者为空字符串，则不修改）
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.UpdatePPageQ'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UpdatePPageA'
      summary: 修改设计原型的某个页面的名称或数据
      tags:
      - 设计原型的页面
  /proj/create_proj:
    post:
      consumes:
      - application/json
      parameters:
      - description: 项目名称，项目详情（可选），所属团队ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.CreateProjQ'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.CreateProjA'
      summary: 创建项目
      tags:
      - 项目管理的第一页
  /proj/get_proj_all:
    post:
      consumes:
      - application/json
      parameters:
      - description: 无
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.GetProjAllQ'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GetProjAllA'
      summary: 全部项目
      tags:
      - 项目管理的第一页
  /proj/get_proj_by_name:
    post:
      consumes:
      - application/json
      parameters:
      - description: 项目名称（不一定是全名，子串搜索，为空时返回数据库中全部不在回收站的项目）
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.GetProjByNameQ'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GetProjByNameA'
      summary: 搜索框
      tags:
      - 项目管理的第一页
  /proj/get_proj_create:
    post:
      consumes:
      - application/json
      parameters:
      - description: 无
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.GetProjCreateQ'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GetProjCreateA'
      summary: 我创建的
      tags:
      - 项目管理的第一页
  /proj/get_proj_join:
    post:
      consumes:
      - application/json
      parameters:
      - description: 无
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.GetProjJoinQ'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GetProjJoinA'
      summary: 我参与的
      tags:
      - 项目管理的第一页
  /proj/move_proj_to_bin:
    post:
      consumes:
      - application/json
      parameters:
      - description: 项目ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.MoveProjBinQ'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.MoveProjBinA'
      summary: 移入或移出回收站
      tags:
      - 项目管理的第一页
  /proj/update_proj:
    post:
      consumes:
      - application/json
      parameters:
      - description: 项目ID，项目名称（必填，可以填原名，不能和其他项目同名），项目详情（可选）
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.UpdateProjQ'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UpdateProjA'
      summary: 修改项目名称、项目描述
      tags:
      - 项目管理的第一页
  /register:
    post:
      consumes:
      - application/json
      parameters:
      - description: 用户名，密码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.RegisterQ'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.RegisterA'
      tags:
      - 基本模块
  /user/info:
    post:
      consumes:
      - application/json
      parameters:
      - description: 用户名，密码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.GetUserInfoQ'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GetUserInfoA'
      tags:
      - 用户模块
  /user/modify_info:
    post:
      consumes:
      - application/json
      parameters:
      - description: 用户信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.ModifyInfoQ'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ModifyInfoA'
      tags:
      - 用户模块
  /user/modify_password:
    post:
      consumes:
      - application/json
      parameters:
      - description: 新密码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/response.ModifyPasswordQ'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ModifyPasswordA'
      tags:
      - 用户模块
swagger: "2.0"
